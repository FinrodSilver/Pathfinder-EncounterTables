package developer.encounterTable.GUI;

import developer.encounterTable.Tables.Tables;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;

public class EncounterTable extends javax.swing.JFrame {

    /**
     * Creates new form EncounterTable
     */
    public EncounterTable() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // Instaniate the tables from the Table class
    Tables table = new Tables();
    // Generate the Strings needed to hold the information
    String desert = "";
    String dungeonLow = "";
    String dungeonMid = "";
    String dungeonHigh = "";
    String forest = "";
    String mountain = "";
    String jungle = "";
    String ocean = "";
    String ruined = "";
    String savannah = "";
    String swamp = "";
    String underground = "";
    String urban = "";

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        desertRadio = new javax.swing.JRadioButton();
        dungeonLowRadio = new javax.swing.JRadioButton();
        dungeonMidRadio = new javax.swing.JRadioButton();
        dungeonHighRadio = new javax.swing.JRadioButton();
        forestRadio = new javax.swing.JRadioButton();
        mountainRadio = new javax.swing.JRadioButton();
        jungleRadio = new javax.swing.JRadioButton();
        oceanRadio = new javax.swing.JRadioButton();
        ruinedRadio = new javax.swing.JRadioButton();
        savannahRadio = new javax.swing.JRadioButton();
        swampRadio = new javax.swing.JRadioButton();
        undergroundRadio = new javax.swing.JRadioButton();
        urbanRadio = new javax.swing.JRadioButton();
        quitButton = new javax.swing.JButton();
        generateButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        encounterOutput = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        clearButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pathfinder Bestiary Random Encounter Tables");
        setBackground(new java.awt.Color(204, 204, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFont(new java.awt.Font("Bookman Old Style", 1, 10)); // NOI18N

        buttonGroup1.add(desertRadio);
        desertRadio.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        desertRadio.setText("Desert CR 6");
        desertRadio.setToolTipText("Desert Random Encounter");

        buttonGroup1.add(dungeonLowRadio);
        dungeonLowRadio.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        dungeonLowRadio.setText("Dungeon (Low-Level) CR 2");
        dungeonLowRadio.setToolTipText("Low Level Random Dungeon Encounter");

        buttonGroup1.add(dungeonMidRadio);
        dungeonMidRadio.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        dungeonMidRadio.setText("Dungeon (Mid-Level) CR 5");
        dungeonMidRadio.setToolTipText("Mid Level Random Dungeon Encounter");

        buttonGroup1.add(dungeonHighRadio);
        dungeonHighRadio.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        dungeonHighRadio.setText("Dungeon (High-Level) CR 10");
        dungeonHighRadio.setToolTipText("High Level Random Dungeon Encounter");

        buttonGroup1.add(forestRadio);
        forestRadio.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        forestRadio.setText("Forest (Temperate Forest) CR 5");
        forestRadio.setToolTipText("Forest Random Encounter");

        buttonGroup1.add(mountainRadio);
        mountainRadio.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        mountainRadio.setText("Hill/Mountain CR 8");
        mountainRadio.setToolTipText("Mountain Random Encounter");

        buttonGroup1.add(jungleRadio);
        jungleRadio.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jungleRadio.setText("Jungle (Warm Forest) CR  5");
        jungleRadio.setToolTipText("Jungle Random Encounter");

        buttonGroup1.add(oceanRadio);
        oceanRadio.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        oceanRadio.setText("Ocean CR 8");
        oceanRadio.setToolTipText("Ocean Random Encounter");

        buttonGroup1.add(ruinedRadio);
        ruinedRadio.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        ruinedRadio.setText("Ruined City CR 6");
        ruinedRadio.setToolTipText("Ruined City Random Encounter");

        buttonGroup1.add(savannahRadio);
        savannahRadio.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        savannahRadio.setText("Savannah (Warm Plains) CR 7");
        savannahRadio.setToolTipText("Savannah Random Encounter");

        buttonGroup1.add(swampRadio);
        swampRadio.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        swampRadio.setText("Swamp CR 7");
        swampRadio.setToolTipText("Swamp Random Encounter");

        buttonGroup1.add(undergroundRadio);
        undergroundRadio.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        undergroundRadio.setText("Underground CR 9");
        undergroundRadio.setToolTipText("Underground Random Encounter");

        buttonGroup1.add(urbanRadio);
        urbanRadio.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        urbanRadio.setText("Urban (Dangerous City) CR 6");
        urbanRadio.setToolTipText("Urban random Encounter");

        quitButton.setText("Quit");
        quitButton.setToolTipText("Exit the program");
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });

        generateButton.setText("Generate");
        generateButton.setToolTipText("Rolls a encounter based on the selected table");
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        encounterOutput.setColumns(20);
        encounterOutput.setFont(new java.awt.Font("Bookman Old Style", 3, 15)); // NOI18N
        encounterOutput.setRows(5);
        encounterOutput.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        encounterOutput.setEditable(false);
        jScrollPane1.setViewportView(encounterOutput);

        jLabel1.setFont(new java.awt.Font("Arial Narrow", 3, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("<html><p>This program uses trademarks and/or copyrights owned by Paizo Publishing, LLC, which are used under Paizo's Community Use Policy. We are expressly prohibited from charging you to use or access this content. This program is not published, endorsed, or specifically approved by Paizo Publishing. For more information about Paizo's Community Use Policy, please visit paizo.com/communityuse. For more information about Paizo Publishing and Paizo products, please visit paizo.com.</p></html>");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        clearButton.setText("Clear");
        clearButton.setToolTipText("Clear the Textbox");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial Black", 2, 11)); // NOI18N
        jLabel2.setText("<html> <p>Pathfinder Bestiary Encounter Tables </p>\n<p> By Richard Webb </p></html>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(desertRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dungeonLowRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dungeonMidRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dungeonHighRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(forestRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mountainRadio)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jungleRadio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(oceanRadio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ruinedRadio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(savannahRadio)
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(generateButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(quitButton)
                                .addGap(179, 179, 179))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(swampRadio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(undergroundRadio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(urbanRadio)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(desertRadio)
                    .addComponent(dungeonLowRadio)
                    .addComponent(dungeonMidRadio)
                    .addComponent(dungeonHighRadio)
                    .addComponent(forestRadio)
                    .addComponent(mountainRadio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(oceanRadio)
                    .addComponent(ruinedRadio)
                    .addComponent(savannahRadio)
                    .addComponent(swampRadio)
                    .addComponent(undergroundRadio)
                    .addComponent(urbanRadio)
                    .addComponent(jungleRadio))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quitButton)
                            .addComponent(generateButton)
                            .addComponent(clearButton)))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(975, 339));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        // Generate code for each of the radio buttons

        if (desertRadio.isSelected()) {
            desert = table.desertTable();
            encounterOutput.append("\n" + desert);
        } else if (dungeonLowRadio.isSelected()) {
            dungeonLow = table.dungeonLowTable();
            encounterOutput.append("\n" + dungeonLow);
        } else if (dungeonMidRadio.isSelected()) {
            dungeonMid = table.dungeonMidTable();
            encounterOutput.append("\n" + dungeonMid);
        } else if (dungeonHighRadio.isSelected()) {
            dungeonHigh = table.dungeonHighTable();
            encounterOutput.append("\n" + dungeonHigh);
        } else if (forestRadio.isSelected()) {
            forest = table.forestTable();
            encounterOutput.append("\n" + forest);
        } else if (mountainRadio.isSelected()) {
            mountain = table.mountainTable();
            encounterOutput.append("\n" + mountain);
        } else if (jungleRadio.isSelected()) {
            jungle = table.jungleTable();
            encounterOutput.append("\n" + jungle);
        } else if (oceanRadio.isSelected()) {
            ocean = table.oceanTable();
            encounterOutput.append("\n" + ocean);
        } else if (ruinedRadio.isSelected()) {
            ruined = table.ruinedCityTable();
            encounterOutput.append("\n" + ruined);
        } else if (savannahRadio.isSelected()) {
            savannah = table.savannahTable();
            encounterOutput.append("\n" + savannah);
        } else if (swampRadio.isSelected()) {
            swamp = table.swampTable();
            encounterOutput.append("\n" + swamp);
        } else if (undergroundRadio.isSelected()) {
            underground = table.undergroundTable();
            encounterOutput.append("\n" + underground);
        } else if (urbanRadio.isSelected()) {
            urban = table.urbanTable();
            encounterOutput.append("\n" + urban);
        }
    }//GEN-LAST:event_generateButtonActionPerformed

    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
       System.exit(0);
    }//GEN-LAST:event_quitButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
       encounterOutput.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;


                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EncounterTable.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EncounterTable.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EncounterTable.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EncounterTable.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EncounterTable().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clearButton;
    private javax.swing.JRadioButton desertRadio;
    private javax.swing.JRadioButton dungeonHighRadio;
    private javax.swing.JRadioButton dungeonLowRadio;
    private javax.swing.JRadioButton dungeonMidRadio;
    private javax.swing.JTextArea encounterOutput;
    private javax.swing.JRadioButton forestRadio;
    private javax.swing.JButton generateButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton jungleRadio;
    private javax.swing.JRadioButton mountainRadio;
    private javax.swing.JRadioButton oceanRadio;
    private javax.swing.JButton quitButton;
    private javax.swing.JRadioButton ruinedRadio;
    private javax.swing.JRadioButton savannahRadio;
    private javax.swing.JRadioButton swampRadio;
    private javax.swing.JRadioButton undergroundRadio;
    private javax.swing.JRadioButton urbanRadio;
    // End of variables declaration//GEN-END:variables
}
